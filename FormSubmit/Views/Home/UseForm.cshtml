@model FormDetail

@{
    ViewData["Title"] = "UseForm";
}


<div class="row">
    <div class="col-md-2">

    </div>
    <div class="col-md-8">
        <form asp-action="UseForm" id="myFrom" method="post">

            @Html.HiddenFor(x => x.id)
            <div class="card-header">@Model.Name</div>
            <div class="alert-secondary">@Model.Description</div>

            @{
                var MyData = Model.FormData;

                var AddedElm = new List<FormData>();
            }

            @foreach (var data in MyData)
            {

                if(AddedElm.Count > 0 && AddedElm.Contains(data))
                {
                    continue;
                }

                if (data.Type == "Layout1")
                {
                    var widgetList = MyData.Where(x => x.LayoutType == "1" && (x.LayoutId == data.guid)).OrderBy(x=>x.DisplayOrder).ToList();

                    AddedElm.AddRange(widgetList);

                    

                        @foreach (var widgetLoop in widgetList)
                        {
                            @await Html.PartialAsync("_FromFieldPartial", widgetLoop)
                        }
                }

                if (data.Type == "Layout2")
                {

                    var widgetList = MyData.Where(x => x.LayoutType == "2" && (x.LayoutId == data.guid + "_1" || x.LayoutId == data.guid+ "_2")).ToList();
                    AddedElm.AddRange(widgetList);

                    <div class="row">
                        <div class="col-md-6">

                            @foreach (var widgetLoop in widgetList.Where(x => x.LayoutColumn == "1"))
                            {
                                @await Html.PartialAsync("_FromFieldPartial", widgetLoop)
                            }
                        </div>

                        <div class="col-md-6">
                            @foreach (var widgetLoop in widgetList.Where(x => x.LayoutColumn == "2"))
                            {
                                @await Html.PartialAsync("_FromFieldPartial", widgetLoop)
                            }
                        </div>

                    </div>

                }

                if (data.Type == "Layout3")
                {

                    var widgetList = MyData.Where(x => x.LayoutType == "3" && (x.LayoutId == data.guid + "_1" || x.LayoutId == data.guid + "_2" || x.LayoutId == data.guid + "_3")).ToList();
                    AddedElm.AddRange(widgetList);

                    <div class="row">
                        <div class="col-md-4">

                            @foreach (var widgetLoop in widgetList.Where(x => x.LayoutColumn == "1"))
                            {
                                @await Html.PartialAsync("_FromFieldPartial",widgetLoop)
                            }
                        </div>

                        <div class="col-md-4">
                            @foreach (var widgetLoop in widgetList.Where(x => x.LayoutColumn == "2"))
                            {
                                @await Html.PartialAsync("_FromFieldPartial",widgetLoop)
                            }
                        </div>

                        <div class="col-md-4">
                            @foreach (var widgetLoop in widgetList.Where(x => x.LayoutColumn == "3"))
                            {
                                @await Html.PartialAsync("_FromFieldPartial",widgetLoop)
                            }
                        </div>

                    </div>

                }

                @await Html.PartialAsync("_FromFieldPartial",data)
            }

            <button id="Save" class="btn btn-primary">Save</button>

        </form>

    </div>
    <div class="col-md-2">

    </div>
</div>


<script>

    $("#Save").on('click', function (e) {
        e.preventDefault();

        const formInput = $('#myFrom input');

        var dataList = [];

        for (let i = 0; i < formInput.length; i++) {
            const data = {
                ElmId: $(formInput[i]).attr("id"),
                value: $(formInput[i]).val()
            };

            dataList.push(data);
        }

        const url = location.origin + "/Home/UseForm";

        $.ajax({
            type: "POST",
            url: url,
            data: JSON.stringify(dataList),
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (response) {

                if (response !== "200") {
                    alert("Some Error occur.");
                }
                else {
                    alert("Success");
                    window.location.reload();
                }

                return false;
            },
            failure: function () {
                alert("Some Error occur.");
            },
            error: function () {
                alert("Some Error occur.");
            }
        });



        return false;
    });

</script>